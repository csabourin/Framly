Visual polish (clarity + hierarchy)

Crisp indicators:

Above/Below → a single 2px hairline that spans the full width with 8–12px endcaps (rounded ends). Add a subtle inner glow (box-shadow: 0 0 0 1px currentColor inset) for dark backgrounds.

Inside → use an inset mask (6–8px padding) so it never touches the edges; rounded corners match the target’s border-radius − 2px.

One indicator, always: ensure only one A/I/B indicator is visible at a time. Dim all other hover outlines to 30–40% opacity to reduce visual noise.

Micro-hint badge: render a tiny pill next to the indicator with text/icon: “Above / Inside / Below”. Fades in after 120ms so it doesn’t flicker.

Ghost card: scale to 98% and set opacity ~0.85 with a soft shadow. If the block has a title, mirror that title in the ghost header for recognition.

Consistent 8-pt spacing: align handle, label, and drag affordances to an 8-pt grid. This “snaps” the UI visually and makes it feel engineered.

Motion & feedback (feel)

Easing: use cubic-bezier(0.2, 0.7, 0, 1) for indicator enter/exit; 150ms in / 120ms out.

Hysteresis: require ~8px of pointer travel before switching A↔I↔B to prevent jitter.

Drop confirmation: briefly expand the indicator to 4px for 120ms on drop, then settle. It reads as “placed”.

Autoscroll affordance: when near edges, show faint gradient overlays (top/bottom) so users understand why the canvas moves.

Selection & focus (reduce errors)

Drag handle only: make dragging start from a specific handle (↕ or ⋮⋮). Whole-row dragging looks slick but causes accidental drags.

Pre-drop outline: while previewing, outline the target container (not just the insertion line). That makes “inside” unmistakable.

Parent breadcrumb on hover: show Section ▸ Row ▸ Column as a faint breadcrumb near the cursor during drag—great for deep trees.

Accessibility (WCAG 2.1 AA)

Announce proposals: live region strings like

“Move Hero inside Section at position 2.”

“Invalid: Image cannot go inside Text.”

Keyboard parity: Space to enter reorder mode, ↑/↓ for above/below within parent, → to try inside, ← to exit to parent, Enter to commit, Esc to cancel. Keep focus on the moved block.

Contrast + size: minimum 3:1 for indicators and 44×44 px targets for handles.

Reduced motion: honor prefers-reduced-motion: reduce → fade only, no scale.

Copy vs move & multi-select (power user niceties)

Modifier keys:

Alt/Option = copy (ghost shows a small “+”).

Shift = constrain to Above/Below only (disables Inside band).

Bulk move: allow ⌘/Ctrl-Click to select multiple blocks and drag as a group (keep relative order).

Error prevention

Descendant guard UI: when hovering over your own descendants, show a clear “forbidden” cursor and a one-line tooltip (“Can’t nest inside itself”).

Locked zones: visually “hatch” locked containers so users don’t keep trying.

Empty & edge states

Empty container target: render a large dashed inset box saying “Drop to add here” when a container has no children.

First/last positions: show a tiny arrow at the container’s start/end so users discover they can drop before first/after last.

Cursors & affordances

Cursors:

Handle hover: grab; dragging: grabbing; invalid: not-allowed.

Z-index safety: give indicators pointer-events:none so they never intercept drag events.

Color & tokens (theme-ability)

Create tokens and stick to them:

--dnd-indicator: oklch(60% 0.20 265);
--dnd-inside-bg: color-mix(in oklab, var(--dnd-indicator), transparent 85%);
--dnd-ghost-shadow: 0 8px 24px rgba(0,0,0,.15);
--dnd-focus: oklch(70% 0.15 265);


Bonus: switch to OKLCH to keep the indicator vivid across light/dark themes.

Performance hygiene

rAF-throttled pointer pipeline; compute target bands from cached rects updated once per frame.

Composited transforms only (translate, no layout thrash).

Passive listeners and pointercapture.

content-visibility:auto on non-visible branches to keep FPS high for big trees.

Interaction details that wow

Drop palette (optional): when hovering a target for >250ms, pop a tiny vertical palette next to it with Above / Inside / Below buttons. Great for shaky hands and tablets.

Snap magnetism: when close to a valid zone, gently “snap” the ghost by a few pixels so users feel the target.

Inline tutorial: first time a user drags, show a non-modal tooltip: “Tip: hold Shift to ignore ‘Inside’”.

QA checklist you can measure

Only one indicator visible at any time.

Proposed placement always equals final placement.

Keyboard can do every mouse action.

Invalid drops get immediate, descriptive feedback.

50+ fps while dragging on a mid-range laptop with 500+ nodes.