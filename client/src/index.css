@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: hsl(0, 0%, 100%);
  --foreground: hsl(210, 25%, 7.8431%);
  --card: hsl(0, 0%, 100%);
  --card-foreground: hsl(210, 25%, 7.8431%);
  --popover: hsl(0, 0%, 100%);
  --popover-foreground: hsl(210, 25%, 7.8431%);
  --primary: hsl(203.8863, 88.2845%, 53.1373%);
  --primary-foreground: hsl(0, 0%, 100%);
  --secondary: hsl(262.1, 83.3%, 57.8%);
  --secondary-foreground: hsl(0, 0%, 100%);
  --muted: hsl(210, 40%, 96%);
  --muted-foreground: hsl(215.4, 16.3%, 46.9%);
  --accent: hsl(210, 40%, 96%);
  --accent-foreground: hsl(222.2, 84%, 4.9%);
  --destructive: hsl(0, 84.2%, 60.2%);
  --destructive-foreground: hsl(0, 0%, 100%);
  --border: hsl(214.3, 31.8%, 91.4%);
  --input: hsl(214.3, 31.8%, 91.4%);
  --ring: hsl(203.8863, 88.2845%, 53.1373%);
  --success: hsl(142.1, 76.2%, 36.3%);
  --warning: hsl(32.4, 95.5%, 44.1%);
  --light: hsl(210, 20%, 95.3%);
  --dark: hsl(222.2, 84%, 4.9%);
  
  /* Professional drag-drop design tokens */
  --dnd-indicator: oklch(60% 0.20 265);
  --dnd-inside-bg: color-mix(in oklab, var(--dnd-indicator), transparent 85%);
  --dnd-ghost-shadow: 0 8px 24px rgba(0,0,0,.15);
  --dnd-focus: oklch(70% 0.15 265);
  
  /* Professional selection tool tokens */
  --sel-radius: 10px;
  --sel-pad: 8px;
  --sel-outline: 2px;
  --sel-gap: 6px;
  
  /* Selection colors (OKLCH for vibrancy) */
  --c-accent: oklch(60% 0.20 265);
  --c-accent-soft: color-mix(in oklab, var(--c-accent), transparent 82%);
  --c-hover: oklch(75% 0.08 265);
  --c-focus: oklch(80% 0.15 265);
  --c-invalid: oklch(60% 0.20 25);
  --c-locked: oklch(55% 0.05 265);
  --c-bg-mask: color-mix(in oklab, var(--c-accent), transparent 90%);
  --c-handle: oklch(40% 0.05 265);
  
  /* Selection effects */
  --e-ring: 0 0 0 2px var(--c-focus), 0 0 0 6px color-mix(in oklab, var(--c-focus), transparent 75%);
  --e-selected: 0 0 0 1px color-mix(in oklab, var(--c-accent), transparent 10%) inset, 0 1px 8px rgba(0,0,0,.12);
  --e-hover: 0 0 0 1px color-mix(in oklab, var(--c-hover), transparent 10%) inset;
  
  /* Motion tokens */
  --t-fast: 120ms;
  --t-med: 160ms;
  --ease: cubic-bezier(.2,.7,0,1);
}

.dark {
  --background: hsl(222.2, 84%, 4.9%);
  --foreground: hsl(210, 40%, 98%);
  --card: hsl(222.2, 84%, 4.9%);
  --card-foreground: hsl(210, 40%, 98%);
  --popover: hsl(222.2, 84%, 4.9%);
  --popover-foreground: hsl(210, 40%, 98%);
  --primary: hsl(203.8863, 88.2845%, 53.1373%);
  --primary-foreground: hsl(0, 0%, 100%);
  --secondary: hsl(217.2, 32.6%, 17.5%);
  --secondary-foreground: hsl(210, 40%, 98%);
  --muted: hsl(217.2, 32.6%, 17.5%);
  --muted-foreground: hsl(215, 20.2%, 65.1%);
  --accent: hsl(217.2, 32.6%, 17.5%);
  --accent-foreground: hsl(210, 40%, 98%);
  --destructive: hsl(0, 62.8%, 30.6%);
  --destructive-foreground: hsl(210, 40%, 98%);
  --border: hsl(217.2, 32.6%, 17.5%);
  --input: hsl(217.2, 32.6%, 17.5%);
  --ring: hsl(203.8863, 88.2845%, 53.1373%);
  
  /* Professional drag-drop tokens for dark theme */
  --dnd-indicator: oklch(70% 0.15 265);
  --dnd-inside-bg: color-mix(in oklab, var(--dnd-indicator), transparent 90%);
  --dnd-ghost-shadow: 0 8px 24px rgba(0,0,0,.4);
  --dnd-focus: oklch(75% 0.12 265);
  
  /* Selection tokens for dark theme */
  --c-accent: oklch(70% 0.15 265);
  --c-hover: oklch(80% 0.08 265);
  --c-focus: oklch(85% 0.12 265);
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground font-sans antialiased;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
  }
}

.canvas-element {
  min-height: 32px;
  min-width: 32px;
  border: 2px dashed transparent;
  transition: all 0.2s ease;
  cursor: pointer;
}

.canvas-element:hover {
  border-color: hsl(203.8863, 88.2845%, 53.1373%);
  background-color: hsla(203.8863, 88.2845%, 53.1373%, 0.05);
}

/* ============================================
   PROFESSIONAL DRAG & DROP SYSTEM
   ============================================ */

/* 1. Every droppable element must be a positioning context */
.canvas-element,
.block,
.circle {
  position: relative !important;           /* so ::after overlays position against the element, not viewport */
  overflow: clip;                          /* clip overlay to element shape */
}
@supports not (overflow: clip) {
  .canvas-element, .block, .circle { overflow: hidden; }
}

/* 2. Make all DnD visuals click-through */
.dnd-ghost,
.dnd-indicator,
.dnd-line,
.dnd-inside-overlay,
.selection-overlay,
.insertion-indicator,
.drag-preview,
[data-dnd-overlay="true"],
.canvas-element::after {                 /* per-element overlay pseudo-element */
  pointer-events: none !important;
}

/* 3. Professional insertion indicators using ::after pseudo-elements */
.canvas-element::after {
  content: "";
  position: absolute;
  inset: 4px;                             /* inner padding from element edge */
  border-radius: inherit;                 /* match the element's rounding */
  opacity: 0;
  box-shadow: none;
  transition: opacity var(--t-fast) var(--ease);
  z-index: 3;
  pointer-events: none;
}

/* When element is the active INSIDE drop target */
.canvas-element[data-drop-target="inside"]::after {
  opacity: 1;
  background: var(--dnd-inside-bg);
  box-shadow: 0 0 0 2px var(--dnd-indicator);
}

/* Professional line indicators for before/after drops */
.dnd-line {
  position: absolute;
  left: 0; 
  right: 0; 
  height: 2px;
  background: var(--dnd-indicator);
  border-radius: 999px;
  z-index: 3;                             /* visible but non-interactive */
  pointer-events: none !important;
}

/* Z-index management for proper layering */
.canvas-element::after,
.dnd-indicator,
.dnd-ghost { 
  z-index: 3; 
  pointer-events: none; 
}

.canvas-element { 
  z-index: 1; 
}

/* Selection handle positioning */
.selection-handle {
  z-index: 4;                             /* above overlays but interactive */
}

/* ============================================
   PROFESSIONAL SELECTION SYSTEM
   ============================================ */

/* Enhanced selection tokens */
:root {
  --selection-primary: oklch(0.67 0.136 239.68);      /* Professional blue */
  --selection-primary-dim: oklch(0.67 0.136 239.68 / 0.08);
  --selection-secondary: oklch(0.75 0.201 254.99);    /* Vivid purple */
  --selection-surface: oklch(0.98 0.004 239.68);      /* Subtle background */
  --selection-border: oklch(0.89 0.011 239.68);       /* Light border */
  --selection-handle-size: 28px;
  --selection-timing-fast: 120ms;
  --selection-timing-medium: 160ms;
  --selection-easing: cubic-bezier(0.2, 0.7, 0, 1);
}

/* Input modality detection */
body[data-input-modality="keyboard"] {
  --selection-focus-visible: oklch(0.67 0.136 239.68 / 0.15);
}

body[data-input-modality="mouse"] {
  --selection-focus-visible: transparent;
}

/* Professional selectable blocks */
.selectable-block {
  position: relative;
  transition: 
    outline-color var(--selection-timing-fast) var(--selection-easing),
    box-shadow var(--selection-timing-fast) var(--selection-easing);
}

/* Selection states */
.selectable-block[data-state="idle"] {
  outline: 1px solid transparent;
}

.selectable-block[data-state="hover"] {
  outline: 2px solid oklch(0.67 0.136 239.68 / 0.3);
  outline-offset: -1px;
}

.selectable-block[data-state="selected"] {
  outline: 2px solid var(--selection-primary);
  outline-offset: -1px;
  box-shadow: 
    0 0 0 1px var(--selection-primary-dim),
    0 1px 3px oklch(0.67 0.136 239.68 / 0.1);
}

.selectable-block[data-state="editing"] {
  outline: 2px solid var(--selection-secondary);
  outline-offset: -1px;
  box-shadow: 
    0 0 0 1px oklch(0.75 0.201 254.99 / 0.15),
    0 2px 8px oklch(0.75 0.201 254.99 / 0.08);
}

.selectable-block[data-state="dragging"] {
  outline: 2px dashed var(--selection-primary);
  outline-offset: -1px;
  opacity: 0.7;
  transform: scale(1.02);
}

/* Focus-visible styling for keyboard users */
.selectable-block:focus-visible {
  outline: 3px solid var(--selection-focus-visible);
  outline-offset: 2px;
}

/* Professional selection handle */
.selection-handle {
  position: absolute;
  top: -14px;
  left: -14px;
  width: var(--selection-handle-size);
  height: var(--selection-handle-size);
  background: var(--selection-primary);
  border: 2px solid white;
  border-radius: 6px;
  cursor: grab;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 10px;
  line-height: 1;
  z-index: 1000;
  transition: 
    transform var(--selection-timing-fast) var(--selection-easing),
    box-shadow var(--selection-timing-fast) var(--selection-easing);
  box-shadow: 
    0 2px 4px oklch(0.67 0.136 239.68 / 0.2),
    0 1px 2px oklch(0.67 0.136 239.68 / 0.1);
}

.selection-handle:hover {
  transform: scale(1.1);
  box-shadow: 
    0 4px 8px oklch(0.67 0.136 239.68 / 0.25),
    0 2px 4px oklch(0.67 0.136 239.68 / 0.15);
}

.selection-handle:active {
  transform: scale(0.95);
  cursor: grabbing;
}

/* Professional resize handles for editing mode */
.resizer {
  position: absolute;
  width: 8px;
  height: 8px;
  background: var(--selection-secondary);
  border: 1px solid white;
  border-radius: 2px;
  opacity: 0;
  transform: scale(0.8);
  transition: 
    opacity var(--selection-timing-medium) var(--selection-easing),
    transform var(--selection-timing-medium) var(--selection-easing);
  z-index: 999;
  pointer-events: all;
}

.selectable-block[data-state="editing"] .resizer {
  opacity: 1;
  transform: scale(1);
}

.resizer.tl { top: -4px; left: -4px; cursor: nw-resize; }
.resizer.tr { top: -4px; right: -4px; cursor: ne-resize; }
.resizer.bl { bottom: -4px; left: -4px; cursor: sw-resize; }
.resizer.br { bottom: -4px; right: -4px; cursor: se-resize; }

.resizer:hover {
  transform: scale(1.2);
  background: oklch(0.75 0.201 254.99 / 0.9);
}

/* Accessibility: Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .selectable-block,
  .selection-handle,
  .resizer {
    transition: none;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .selectable-block[data-state="selected"] {
    outline: 3px solid CanvasText;
  }
  
  .selection-handle {
    background: CanvasText;
    color: Canvas;
    border-color: Canvas;
  }
}

/* Force colors mode support */
@media (forced-colors: active) {
  .selectable-block[data-state="selected"] {
    outline: 2px solid Highlight;
    box-shadow: none;
  }
  
  .selection-handle {
    background: Highlight;
    color: HighlightText;
    border-color: Canvas;
  }
}

/* Professional drag-drop animations */
@keyframes dnd-indicator-enter {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes dnd-indicator-exit {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.95);
  }
}

@keyframes dnd-badge-enter {
  from {
    opacity: 0;
    transform: scale(0.9) translateX(4px);
  }
  to {
    opacity: 1;
    transform: scale(1) translateX(0);
  }
}

@keyframes dnd-drop-confirm {
  0% {
    height: 2px;
  }
  50% {
    height: 4px;
  }
  100% {
    height: 2px;
  }
}

/* Easing functions */
.dnd-ease-enter {
  animation-timing-function: cubic-bezier(0.2, 0.7, 0, 1);
  animation-duration: 150ms;
  animation-fill-mode: both;
}

.dnd-ease-exit {
  animation-timing-function: cubic-bezier(0.2, 0.7, 0, 1);
  animation-duration: 120ms;
  animation-fill-mode: both;
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .dnd-ease-enter,
  .dnd-ease-exit {
    animation: none;
    transition: opacity 0.15s ease;
  }
  :root { 
    --t-fast: 0ms; 
    --t-med: 0ms; 
    --ease: linear; 
  }
}

/* High contrast mode support */
@media (forced-colors: active) {
  :root {
    --c-accent: CanvasText;
    --c-accent-soft: transparent;
    --c-hover: Highlight;
    --c-focus: Highlight;
    --c-invalid: GrayText;
    --c-locked: GrayText;
  }
}

/* Professional Selection Tool Styles */

/* Base selectable block with overlay system */
.selectable-block {
  position: relative;
  border-radius: var(--sel-radius);
  transition: box-shadow var(--t-fast) var(--ease), transform var(--t-fast) var(--ease);
}

/* Selection overlay (no pointer capture) */
.selectable-block::after {
  content: "";
  position: absolute;
  inset: var(--sel-gap);
  border-radius: calc(var(--sel-radius) - 2px);
  pointer-events: none;
  opacity: 0;
  transform: scale(.995);
  box-shadow: none;
  transition: opacity var(--t-fast) var(--ease), transform var(--t-fast) var(--ease), box-shadow var(--t-fast) var(--ease);
}

/* Hover state (mouse-only polite affordance) */
body[data-input-modality="mouse"] .selectable-block[data-state="hover"]::after {
  opacity: 1;
  box-shadow: var(--e-hover);
  outline: 1px solid var(--c-hover);
  transform: scale(1);
}

/* Focus state (keyboard) */
.selectable-block[data-state="focus"] { 
  outline: none; 
}

.selectable-block[data-state="focus"]::after {
  opacity: 1;
  box-shadow: var(--e-ring);
  transform: scale(1);
}

/* Selected state (single) */
.selectable-block[data-state="selected"]::after,
.selectable-block[aria-selected="true"]::after {
  opacity: 1;
  box-shadow: 0 0 0 var(--sel-outline) var(--c-accent), var(--e-selected);
  background: var(--c-accent-soft);
  transform: scale(1);
}

/* Multi-selected state (stacked emphasis) */
.selectable-block[data-state="multiselected"]::after {
  opacity: 1;
  box-shadow:
    0 0 0 var(--sel-outline) var(--c-accent),
    0 0 0 calc(var(--sel-outline) + 2px) color-mix(in oklab, var(--c-accent), transparent 70%),
    var(--e-selected);
  background: color-mix(in oklab, var(--c-accent), transparent 88%);
}

/* Editing mode (content editing or resizing) */
.selectable-block[data-state="editing"]::after {
  opacity: 1;
  box-shadow: 0 0 0 2px var(--c-focus), 0 0 0 6px color-mix(in oklab, var(--c-focus), transparent 70%);
  background: var(--c-bg-mask);
}

/* Dragging state (selected origin) */
.selectable-block[data-state="dragging"] {
  transform: translateZ(0) scale(.995);
  box-shadow: 0 10px 24px rgba(0,0,0,.18);
  cursor: grabbing;
}

body .selectable-block[data-state="dragging"]::after { 
  opacity: 0; 
}

/* Invalid/Forbidden state */
.selectable-block[data-invalid="true"]::after {
  opacity: 1;
  box-shadow: 0 0 0 2px var(--c-invalid), 0 0 0 6px color-mix(in oklab, var(--c-invalid), transparent 70%);
  background: color-mix(in oklab, var(--c-invalid), transparent 88%);
}

.selectable-block[data-invalid="true"] { 
  cursor: not-allowed; 
}

/* Locked state */
.selectable-block[data-locked="true"]::after {
  opacity: 1;
  background:
    repeating-linear-gradient(45deg,
      color-mix(in oklab, var(--c-locked), transparent 85%) 0 8px,
      color-mix(in oklab, var(--c-locked), transparent 70%) 8px 16px);
  box-shadow: 0 0 0 1px var(--c-locked) inset;
}

.selectable-block[data-locked="true"] { 
  cursor: default; 
}

/* Selection handle */
.selection-handle {
  position: absolute;
  top: var(--sel-gap);
  left: var(--sel-gap);
  width: 28px; 
  height: 28px;
  display: grid; 
  place-items: center;
  border-radius: 8px;
  cursor: grab;
  color: var(--c-handle);
  background: color-mix(in oklab, var(--c-handle), transparent 92%);
  transition: background var(--t-fast) var(--ease), transform var(--t-fast) var(--ease);
  z-index: 10;
}

.selection-handle:active { 
  cursor: grabbing; 
  transform: scale(.97); 
}

.selectable-block[data-state="selected"] .selection-handle { 
  background: color-mix(in oklab, var(--c-accent), transparent 85%); 
  color: var(--c-accent); 
}

/* Resize handles for editing mode */
.selectable-block[data-state="editing"] .resizer {
  position: absolute; 
  width: 10px; 
  height: 10px;
  background: var(--c-accent); 
  border-radius: 50%;
  box-shadow: 0 0 0 2px #fff;
  z-index: 15;
}

.selectable-block[data-state="editing"] .resizer.br { 
  right: -5px; 
  bottom: -5px; 
  cursor: nwse-resize; 
}

.selectable-block[data-state="editing"] .resizer.bl { 
  left: -5px; 
  bottom: -5px; 
  cursor: nesw-resize; 
}

.selectable-block[data-state="editing"] .resizer.tr { 
  right: -5px; 
  top: -5px; 
  cursor: nesw-resize; 
}

.selectable-block[data-state="editing"] .resizer.tl { 
  left: -5px; 
  top: -5px; 
  cursor: nwse-resize; 
}

/* Drop target helper */
.selectable-block[data-drop-target="inside"]::after {
  opacity: 1;
  background: color-mix(in oklab, var(--c-accent), transparent 88%);
  box-shadow: 0 0 0 2px var(--c-accent);
}

/* Keyboard-first focus styling */
body[data-input-modality="keyboard"] .selectable-block:focus-visible::after {
  opacity: 1; 
  box-shadow: var(--e-ring); 
  transform: scale(1);
}

body[data-input-modality="mouse"] .selectable-block:focus-visible::after {
  box-shadow: 0 0 0 1px var(--c-hover);
}

/* Reset heading styles within canvas elements to allow custom fontSize */
.canvas-element h1,
.canvas-element h2,
.canvas-element h3,
.canvas-element h4,
.canvas-element h5,
.canvas-element h6 {
  font-size: inherit !important;
  font-weight: inherit !important;
  line-height: inherit !important;
  margin: 0 !important;
  padding: 0 !important;
}

/* Canvas grid pattern */
.canvas-grid {
  background-image: 
    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

/* Sibling spacing animations during drag operations */
.sibling-spacing-before {
  transform: translateY(-8px);
  transition: transform 0.2s ease-out;
}

.sibling-spacing-after {
  transform: translateY(8px);
  transition: transform 0.2s ease-out;
}

.sibling-spacing-reset {
  transform: translateY(0);
  transition: transform 0.2s ease-out;
}

/* Enhanced insertion line visibility */
.insertion-line {
  z-index: 60;
  background: linear-gradient(90deg, transparent, #3b82f6, transparent);
  box-shadow: 0 0 12px rgba(59, 130, 246, 0.8);
}

.insertion-line-bright {
  background: #3b82f6;
  box-shadow: 
    0 0 12px rgba(59, 130, 246, 0.8),
    0 0 20px rgba(59, 130, 246, 0.6),
    0 0 30px rgba(59, 130, 246, 0.4);
}

/* Animated padding expansion for better drag targeting */
.drag-expand-padding {
  transition: padding 0.2s cubic-bezier(0.4, 0, 0.2, 1) !important;
  padding: 45px !important;
}

/* Ensure smooth transitions for all padding changes during drag */
.drag-transition-padding {
  transition: padding 0.2s cubic-bezier(0.4, 0, 0.2, 1) !important;
}

.canvas-element.selected {
  border-color: hsl(203.8863, 88.2845%, 53.1373%);
  background-color: hsla(203.8863, 88.2845%, 53.1373%, 0.1);
}

.resize-handle {
  position: absolute;
  background: hsl(203.8863, 88.2845%, 53.1373%);
  opacity: 0;
  transition: opacity 0.2s;
}

.canvas-element.selected .resize-handle {
  opacity: 1;
}

.resize-handle.top {
  top: -2px;
  left: 10%;
  right: 10%;
  height: 4px;
  cursor: ns-resize;
}

.resize-handle.bottom {
  bottom: -2px;
  left: 10%;
  right: 10%;
  height: 4px;
  cursor: ns-resize;
}

.resize-handle.left {
  left: -2px;
  top: 10%;
  bottom: 10%;
  width: 4px;
  cursor: ew-resize;
}

.resize-handle.right {
  right: -2px;
  top: 10%;
  bottom: 10%;
  width: 4px;
  cursor: ew-resize;
}

.canvas-grid {
  background-image: 
    linear-gradient(rgba(0, 0, 0, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0, 0, 0, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

/* Text element paragraph styling */
[contenteditable] p {
  margin: 0 0 0.5em 0;
  line-height: 1.4;
  width: 100%;
}

[contenteditable] p:last-child {
  margin-bottom: 0;
}

[contenteditable] p:empty::before {
  content: '\00a0'; /* Non-breaking space for empty paragraphs */
  color: transparent;
}

/* Text display styling */
.text-element {
  width: 100% !important;
  height: 100% !important;
  box-sizing: border-box !important;
  display: block !important;
}

.text-element p {
  margin: 0 0 0.5em 0;
  line-height: 1.4;
  width: 100%;
  box-sizing: border-box;
}

.text-element p:last-child {
  margin-bottom: 0;
}

/* Text editing mode styling */
.text-editing {
  width: 100% !important;
  height: 100% !important;
  min-height: 2em !important;
  background-color: rgba(59, 130, 246, 0.05);
  border: 2px solid rgb(59, 130, 246);
  border-radius: 4px;
  display: flex !important;
  flex-direction: column !important;
  justify-content: flex-start !important;
}

.text-editing p {
  width: 100%;
  margin: 0 0 0.5em 0;
  line-height: 1.4;
  flex-grow: 0;
  flex-shrink: 0;
}

.text-editing:focus {
  outline: none;
  background-color: rgba(59, 130, 246, 0.08);
}

/* List styling to show bullets and numbering */
ul, ol {
  list-style-position: inside;
  margin: 0;
  padding: 0;
}

ul {
  list-style-type: disc;
}

ol {
  list-style-type: decimal;
}

ul li, ol li {
  margin: 0.25em 0;
  padding-left: 0.5em;
}

/* Nested list styling */
ul ul {
  list-style-type: circle;
}

ul ul ul {
  list-style-type: square;
}

ol ol {
  list-style-type: lower-alpha;
}

ol ol ol {
  list-style-type: lower-roman;
}

/* Heading level styling to show visual differences */
h1 {
  font-size: 2rem !important; /* 32px */
  font-weight: 700 !important;
  line-height: 1.2 !important;
  margin-bottom: 1rem !important;
}

h2 {
  font-size: 1.75rem !important; /* 28px */
  font-weight: 700 !important;
  line-height: 1.2 !important;
  margin-bottom: 0.875rem !important;
}

h3 {
  font-size: 1.5rem !important; /* 24px */
  font-weight: 600 !important;
  line-height: 1.2 !important;
  margin-bottom: 0.75rem !important;
}

h4 {
  font-size: 1.25rem !important; /* 20px */
  font-weight: 600 !important;
  line-height: 1.2 !important;
  margin-bottom: 0.625rem !important;
}

h5 {
  font-size: 1.125rem !important; /* 18px */
  font-weight: 600 !important;
  line-height: 1.2 !important;
  margin-bottom: 0.5rem !important;
}

h6 {
  font-size: 1rem !important; /* 16px */
  font-weight: 600 !important;
  line-height: 1.2 !important;
  margin-bottom: 0.5rem !important;
}
